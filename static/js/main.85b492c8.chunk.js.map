{"version":3,"sources":["Auth/Auth.js","utils/language.js","Context/Context.js","MainContainer/Drawers/Drawer.js","MainContainer/HeaderContainer/Header.js","utils/query.js","MainContainer/ContentContainer/Home/home.js","Callback.js","MainContainer/ContentContainer/Account/getAccounts.js","MainContainer/ContentContainer/Account/createAccounts.js","MainContainer/ContentContainer/Account/Account.js","MainContainer/ContentContainer/Company/createCompany.js","MainContainer/ContentContainer/ContentContainer.js","MainContainer/MainContainer.js","utils/apollo.js","App.js","serviceWorker.js","Context/ContextStore.js","Context/createReducer.js","index.js"],"names":["Auth","auth","Auth0","WebAuth","domain","process","clientID","audience","concat","redirectUri","responseType","scope","login","_this","authorize","handleAuthentication","isAuthenticated","localStorage","getItem","logout","removeItem","checkSession","setSession","authResult","setItem","accessToken","idTokenPayload","sub","idToken","parseHash","err","error","console","log","Language","en","overview","invoice","bills","transactions","customers","products","accounts","sales","addcompany","cancel","add","fo","de","createContext","withStyles","list","width","fullList","props","_useContext","useContext","Context","state","Object","slicedToArray","_useState","useState","_useState2","left","setLeft","toggleDrawer","side","open","handleOnClick","classes","sideList","react_default","a","createElement","className","List_default","map","text","index","react_router_dom","key","to","split","join","toLowerCase","ListItem_default","button","onClick","ListItemIcon_default","Dashboard_default","Mail_default","ListItemText_default","primary","locals","Divider_default","Drawer_default","onClose","tabIndex","role","onKeyDown","root","flexGrow","grow","menuButton","marginLeft","marginRight","drawer","setDrawer","AppBar_default","position","Toolbar_default","IconButton_default","color","aria-label","Menu_default","Drawers_Drawer","Typography_default","variant","Button_default","GET_COMPANY","gql","_templateObject","GET_SUBSCRIP_ACCOUNTS","_templateObject2","_templateObject3","_templateObject4","GET_USER","_templateObject5","CREATE_COMPANY","_templateObject6","CREATE_ACCOUNT","_templateObject7","_templateObject8","Home","data","useQuery","suspend","_useContext2","dispatch","react","user","first_name","last_name","company","name","type","companies","Company","Paper_default","Table_default","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","item","component","id","mother_id","user_id","Callback","React","Component","Accounts","_useSubscription","useSubscription","variables","company_id","loading","Account","balance","debit","theme","fab","margin","spacing","unit","extendedIcon","setOpen","_useState3","_useState4","setName","_useState5","_useState6","setDebit","_useState7","_useState8","setBalance","createAccountMutation","useMutation","handleClose","Fab_default","Add_default","Dialog_default","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","TextField_default","autoFocus","label","fullWidth","onChange","e","target","value","select","DialogActions_default","preventDefault","createAccounts","getAccounts","setMother_id","createCompanyMutation","ContentContainer","react_router","exact","path","CreateCompany","MainContainer","HeaderContainer_Header","ContentContainer_ContentContainer","http","HttpLink","uri","headers","x-hasura-admin-secret","x-hasura-role","x-hasura-user-id","fetch","wsForNode","window","ws","wsClient","SubscriptionClient","reconnect","connectionParams","websocket","WebSocketLink","link","_ref","query","_getMainDefinition","getMainDefinition","kind","operation","client","ApolloClient","cache","InMemoryCache","StoreUser","token","useEffect","User","App","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleAuth","handleLogout","ApolloContext","App_StoreUser","MainContainer_MainContainer","Boolean","location","hostname","match","initialState","currentIndex","reducer","handlers","arguments","length","undefined","action","hasOwnProperty","createReducer","reset","change_company","objectSpread","set_company","set_locals","load_user","ContextStore","_useReducer","useReducer","_useReducer2","Provider","children","ReactDOM","render","Context_ContextStore","basename","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.85b492c8.chunk.js","sourcesContent":["import Auth0 from 'auth0-js'\n\nclass Auth {\n  auth = new Auth0.WebAuth({\n    domain: process.env.REACT_APP_AUTH_DOMAIN,\n    clientID: process.env.REACT_APP_AUTH_CLIENT_ID,\n    audience: `https://${process.env.REACT_APP_AUTH_DOMAIN}/userinfo`,\n    redirectUri: process.env.REACT_APP_REDIRECT_URI,\n    responseType: 'token id_token',\n    scope: 'openid',\n  })\n\n  login = () => {\n    this.auth.authorize()\n    this.handleAuthentication()\n  }\n\n  isAuthenticated = () => {\n    return localStorage.getItem('idToken') ? true : false\n  }\n\n  logout = () => {\n    localStorage.removeItem('accessToken')\n    localStorage.removeItem('idToken')\n    localStorage.removeItem('sub')\n    this.auth.logout()\n  }\n\n  checkSession = () => {\n    this.auth.checkSession({}, this.setSession)\n  }\n\n  setSession = authResult => {\n    localStorage.setItem('accessToken', authResult.accessToken)\n    localStorage.setItem('sub', authResult.idTokenPayload.sub)\n    localStorage.setItem('idToken', authResult.idToken)\n  }\n\n  handleAuthentication = () => {\n    this.auth.parseHash((err, authResult) => {\n      if (err) {\n        if (err.error === 'login_required') {\n          this.login()\n        }\n        console.log(err)\n      }\n      if (authResult && authResult.idToken && authResult.accessToken) {\n        this.setSession(authResult)\n      }\n    })\n  }\n}\nexport default Auth\n","const Language = {\n  en: {\n    overview: 'Overview',\n    invoice: 'Invoice',\n    bills: 'Bills',\n    transactions: 'Transactions',\n    customers: 'Customers',\n    products: 'Products',\n    accounts: 'Accounts',\n    sales: 'Sales',\n    login: 'Login',\n    logout: 'Logout',\n    addcompany: 'Add Company',\n    cancel: 'Cancel',\n    add: 'Add',\n  },\n  fo: {\n    overview: 'Yvirlit',\n    invoice: 'Faktura',\n    bills: 'Rokningar',\n    transactions: 'Flytingar',\n    customers: 'Kundar',\n    products: 'Vørur',\n    accounts: 'Kontur',\n    sales: 'Sølur',\n    login: 'Rita inn',\n    logout: 'Rita út',\n    addcompany: 'Stovna fyritøku',\n    cancel: 'Strika',\n    add: 'Legg afturat',\n  },\n  de: {\n    overview: 'Übersicht',\n    invoice: 'Rechnung',\n    bills: 'Rechnungen',\n    transactions: 'Transaktionen',\n    customers: 'Kunden',\n    products: 'Produkte',\n    accounts: 'Konten',\n    sales: 'Verkauf',\n    login: 'Anmeldung',\n    logout: 'Ausloggen',\n    addcompany: 'Firma Hinzufügen',\n    cancel: 'Stornieren',\n    add: 'Hinzufügen',\n  },\n}\n\nexport default Language\n","import { createContext } from 'react'\nexport default createContext()","import React, { useContext, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport MailIcon from '@material-ui/icons/Mail'\nimport Dashboard from '@material-ui/icons/Dashboard'\nimport Language from '../../utils/language'\nimport { Link } from 'react-router-dom'\nimport Context from '../../Context/Context'\n\nconst styles = {\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n}\n\nconst SideDrawer = props => {\n  const [state] = useContext(Context)\n  const [left, setLeft] = useState(true)\n\n  const toggleDrawer = (side, open) => () => {\n    setLeft(open)\n  }\n\n  const handleOnClick = () => {\n    // this.forceUpdate()\n  }\n\n  const { classes } = props\n\n  const sideList = (\n    <div className={classes.list}>\n      {/* <Router> */}\n      <List>\n        {[\n          Language['en'].overview,\n          Language['en'].invoice,\n          Language['en'].bills,\n          Language['en'].transactions,\n          Language['en'].accounts,\n          Language['en'].addcompany,\n        ].map((text, index) => (\n          // <Link to={text === 'Accounts' ? '/db' : `/${text}`}>\n          <Link key={index} to={`/${text.split(' ').join('').toLowerCase()}`}>\n            <ListItem button key={index} onClick={handleOnClick}>\n              <ListItemIcon>\n                {index % 2 === 0 ? <Dashboard /> : <MailIcon />}\n              </ListItemIcon>\n              <ListItemText\n                primary={\n                  Language[state.locals][\n                    text\n                      .toLowerCase()\n                      .split(' ')\n                      .join('')\n                  ]\n                }\n              />\n            </ListItem>\n          </Link>\n        ))}\n      </List>\n      {/* </Router> */}\n      <Divider />\n      {/* <List>\n        {[\n          Language[state.locals].sales,\n          Language[state.locals].customers,\n          Language[state.locals].products,\n        ].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n            </ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List> */}\n    </div>\n  )\n\n  return (\n    <div>\n      <Drawer open={left} onClose={toggleDrawer('left', false)}>\n        <div\n          tabIndex={0}\n          role=\"button\"\n          onClick={toggleDrawer('left', false)}\n          onKeyDown={toggleDrawer('left', false)}\n        >\n          {sideList}\n        </div>\n      </Drawer>\n    </div>\n  )\n}\n\nSideDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(SideDrawer)\n","import React, { useState, useContext } from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Auth from '../../Auth/Auth'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Drawer from '../Drawers/Drawer'\nimport Language from '../../utils/language'\nimport Context from '../../Context/Context'\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n}\n\nconst Header = props => {\n  const auth = new Auth()\n  const [drawer, setDrawer] = useState(false)\n  const [state] = useContext(Context)\n  const handleAuth = () => {\n    if (auth.isAuthenticated() === false) {\n      auth.login()\n    } else {\n      console.log('try again')\n    }\n  }\n\n  const handleLogout = () => {\n    auth.logout()\n  }\n\n  const handleDrawer = () => {\n    setDrawer(!drawer)\n  }\n\n  const { classes } = props\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"Menu\"\n            onClick={handleDrawer}\n          >\n            <MenuIcon />\n            {drawer ? <Drawer /> : ''}\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n            CFO\n          </Typography>\n          {localStorage.getItem('sub') ? (\n            <Button onClick={handleLogout} color=\"inherit\">\n              {Language[state.locals].logout}\n            </Button>\n          ) : (\n            <Button onClick={handleAuth} color=\"inherit\">\n              {Language[state.locals].login}\n            </Button>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(Header)\n","import gql from 'graphql-tag'\nconst GET_COMPANY = gql`\n  query getCompanies {\n    Company {\n      id\n      mother_id\n      name\n      user_id\n    }\n  }\n`\n\nconst GET_SUBSCRIP_COMPANY = gql`\n  subscription {\n    Company {\n      user_id\n      name\n    }\n  }\n`\n\nconst GET_ACCOUNTS = gql`\n  {\n    Company {\n      user_id\n      name\n    }\n  }\n`\n\nconst GET_SUBSCRIP_ACCOUNTS = gql`\n  subscription($company_id: uuid!) {\n    Account(where: { company_id: { _eq: $company_id } }) {\n      id\n      name\n      debit\n      balance\n      company_id\n      Company {\n        user_id\n        name\n      }\n    }\n  }\n`\n\nconst GET_USER = gql`\n  query($token: String!) {\n    User(where: { token: { _like: $token } }) {\n      first_name\n      last_name\n      id\n    }\n  }\n`\n\nconst CREATE_COMPANY = gql`\n  mutation createCompany($name: String!, $mother_id: uuid, $user_id: uuid!) {\n    insert_Company(\n      objects: { name: $name, mother_id: $mother_id, user_id: $user_id }\n    ) {\n      affected_rows\n    }\n  }\n`\n\nconst CREATE_ACCOUNT = gql`\n  mutation createAccount(\n    $name: String!\n    $balance: numeric!\n    $debit: Boolean!\n    $company_id: uuid!\n  ) {\n    insert_Account(\n      objects: {\n        name: $name\n        balance: $balance\n        debit: $debit\n        company_id: $company_id\n      }\n    ) {\n      affected_rows\n    }\n  }\n`\nconst GET_DAY_BOOK = gql`\n  {\n    day_book {\n      account_id\n      name\n      balance\n    }\n  }\n`\n\nexport {\n  GET_COMPANY,\n  GET_DAY_BOOK,\n  GET_SUBSCRIP_COMPANY,\n  GET_ACCOUNTS,\n  GET_SUBSCRIP_ACCOUNTS,\n  CREATE_ACCOUNT,\n  CREATE_COMPANY,\n  GET_USER,\n}\n","import React, { useContext, Fragment } from 'react'\nimport Context from '../../../Context/Context'\nimport { useQuery } from 'react-apollo-hooks'\nimport { GET_COMPANY } from '../../../utils/query'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\n\nconst Home = () => {\n  const { data } = useQuery(GET_COMPANY, {\n    suspend: false,\n  })\n\n  const [state, dispatch] = useContext(Context)\n\n  const companiesLoader = () => {\n    dispatch({\n      type: 'change_company',\n      companies: data.Company,\n    })\n  }\n\n  const companyHandler = () => {\n    dispatch({\n      type: 'set_company',\n      index: 0,\n    })\n  }\n\n  return (\n    <Fragment>\n      <h1>\n        Hello mr.\n        {state.user ? state.user.first_name + ' ' + state.user.last_name : ''}\n      </h1>\n      <p>Bergur & Kristmund</p>\n      <p>current company:{state.company ? state.company.name : 'Nan'}</p>\n\n      <p>{state.user ? state.user.name : console.log('err\"3efdfor')}</p>\n\n      <button onClick={companiesLoader}>load companies</button>\n      <button onClick={companyHandler}>get company</button>\n      <button\n        onClick={() => {\n          dispatch({ type: 'set_locals', locals: 'en' })\n        }}\n      >\n        EN\n      </button>\n      <button\n        onClick={() => {\n          dispatch({ type: 'set_locals', locals: 'fo' })\n        }}\n      >\n        FO\n      </button>\n      <button\n        onClick={() => {\n          dispatch({ type: 'set_locals', locals: 'de' })\n        }}\n      >\n        DE\n      </button>\n      <Paper>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Id</TableCell>\n              <TableCell align=\"right\">Mother Id</TableCell>\n              <TableCell align=\"right\">User Id</TableCell>\n              <TableCell align=\"right\">Name</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {state.companies\n              ? state.companies.map((item, index) => {\n                  return (\n                    <TableRow key={index}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {item.id}\n                      </TableCell>\n                      <TableCell align=\"right\">{item.mother_id}</TableCell>\n                      <TableCell align=\"right\">{item.user_id}</TableCell>\n                      <TableCell align=\"right\">{item.name}</TableCell>\n                    </TableRow>\n                  )\n                })\n              : console.log('error')}\n          </TableBody>\n        </Table>\n      </Paper>\n    </Fragment>\n  )\n}\n\nexport default Home\n","import React from \"react\";\n\nclass Callback extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Hello from callback</h1>\n      </div>\n    );\n  }\n}\n\nexport default Callback;\n","import { useSubscription } from 'react-apollo-hooks'\nimport { GET_SUBSCRIP_ACCOUNTS } from '../../../utils/query'\nimport React, { useContext } from 'react'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport Context from '../../../Context/Context'\n\nconst Accounts = () => {\n  const [state] = useContext(Context)\n  const { data, error, loading } = useSubscription(GET_SUBSCRIP_ACCOUNTS, {\n    suspend: false,\n    variables: {\n      company_id: state.company ? state.company.id : null,\n    },\n  })\n\n  if (loading) {\n    console.log('Loading accounts...')\n    return (\n      <tr>\n        <td>-</td>\n      </tr>\n    )\n  }\n  if (error) {\n    console.log('Error accounts: ', error)\n    return (\n      <tr>\n        <td>-</td>\n      </tr>\n    )\n  }\n  return (\n    <Paper>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Id</TableCell>\n            <TableCell align=\"right\">Name</TableCell>\n            <TableCell align=\"right\">Balance</TableCell>\n            <TableCell align=\"right\">Debit / Credit</TableCell>\n            <TableCell align=\"right\">Company name</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.Account.map((item, index) => {\n            return (\n              <TableRow key={index}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {item.id}\n                </TableCell>\n                <TableCell align=\"right\">{item.name}</TableCell>\n                <TableCell align=\"right\">{item.balance}</TableCell>\n                <TableCell align=\"right\">\n                  {item.debit ? 'debit' : 'credit'}\n                </TableCell>\n                <TableCell align=\"right\">{item.Company.name}</TableCell>\n              </TableRow>\n            )\n          })}\n        </TableBody>\n      </Table>\n    </Paper>\n  )\n}\n\nexport default Accounts\n","import React, { Fragment, useState, useContext } from 'react'\nimport Fab from '@material-ui/core/Fab'\nimport AddIcon from '@material-ui/icons/Add'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport { CREATE_ACCOUNT } from '../../../utils/query'\nimport { useMutation } from 'react-apollo-hooks'\nimport Context from '../../../Context/Context'\nimport Language from '../../../utils/language'\n\nconst styles = theme => ({\n  fab: {\n    margin: theme.spacing.unit,\n    flexGrow: 1,\n  },\n  extendedIcon: {\n    marginRight: theme.spacing.unit,\n  },\n})\n\nconst CreateAccount = props => {\n  const [open, setOpen] = useState(false)\n  const [name, setName] = useState('')\n  const [debit, setDebit] = useState(true)\n  const [balance, setBalance] = useState(0)\n  const { classes } = props\n  const createAccountMutation = useMutation(CREATE_ACCOUNT)\n  const [state] = useContext(Context)\n\n  const handleClose = () => {\n    setName('')\n    setBalance(0)\n    setDebit(true)\n    if (state.company !== null) {\n      setOpen(!open)\n    }\n  }\n\n  const onSubmit = e => {\n    e.preventDefault()\n    if (name !== '') {\n      createAccountMutation({\n        variables: {\n          name,\n          balance,\n          debit,\n          company_id: state.company.id,\n        },\n      })\n    }\n    handleClose()\n  }\n\n  return (\n    <Fragment>\n      <Fab\n        onClick={handleClose}\n        color=\"primary\"\n        aria-label=\"Add\"\n        className={classes.fab}\n      >\n        <AddIcon />\n      </Fab>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Add Account</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Fill this form to add an account\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Account name\"\n            type=\"text\"\n            fullWidth\n            onChange={e => {\n              setName(e.target.value)\n            }}\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"balance\"\n            label=\"Balance\"\n            value={balance}\n            type=\"number\"\n            fullWidth\n            onChange={e => {\n              setBalance(e.target.value)\n            }}\n          />\n          <TextField\n            autoFocus\n            select\n            margin=\"dense\"\n            id=\"debit\"\n            label=\"Debit / Credit\"\n            fullWidth\n            value={debit}\n            onChange={e => {\n              setDebit(e.target.value)\n            }}\n          >\n            <option key={1} value={true}>\n              Debit\n            </option>\n            <option key={2} value={false}>\n              Credit\n            </option>\n          </TextField>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            {Language[state.locals].cancel}\n          </Button>\n          <Button onClick={onSubmit} color=\"primary\">\n            {Language[state.locals].add}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Fragment>\n  )\n}\n\nCreateAccount.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(CreateAccount)\n","import React, { Fragment } from 'react'\n\nimport GetAccount from './getAccounts'\nimport CreateAccount from './createAccounts'\nconst Account = () => (\n  <Fragment>\n    <CreateAccount />\n    <GetAccount />\n  </Fragment>\n)\n\nexport default Account\n","import React, { Fragment, useState, useContext } from 'react'\nimport { CREATE_COMPANY } from '../../../utils/query'\nimport { useMutation } from 'react-apollo-hooks'\nimport Context from '../../../Context/Context'\nimport Fab from '@material-ui/core/Fab'\nimport AddIcon from '@material-ui/icons/Add'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\n\nconst styles = theme => ({\n  fab: {\n    margin: theme.spacing.unit,\n    flexGrow: 1,\n  },\n  extendedIcon: {\n    marginRight: theme.spacing.unit,\n  },\n})\n\nconst CreateCompany = props => {\n  let [name, setName] = useState('')\n  let [mother_id, setMother_id] = useState(null)\n  const { classes } = props\n  const createCompanyMutation = useMutation(CREATE_COMPANY)\n  const [state] = useContext(Context)\n  const [open, setOpen] = useState(false)\n\n  const handleClose = () => {\n    setName('')\n    setMother_id(null)\n    if (state.user !== null) {\n      setOpen(!open)\n    }\n  }\n\n  const onSubmit = e => {\n    e.preventDefault()\n    if (name !== '') {\n      createCompanyMutation({\n        variables: {\n          name,\n          mother_id,\n          user_id: state.user.id,\n        },\n      })\n    }\n    handleClose()\n  }\n\n  return (\n    <Fragment>\n      <Fab\n        onClick={handleClose}\n        color=\"primary\"\n        aria-label=\"Add\"\n        className={classes.fab}\n      >\n        <AddIcon />\n      </Fab>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Add Company</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Fill this form to add a company</DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Company name\"\n            type=\"text\"\n            fullWidth\n            onChange={e => {\n              setName(e.target.value)\n            }}\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"mother_id\"\n            label=\"Mother ID\"\n            type=\"text\"\n            fullWidth\n            onChange={e => {\n              setMother_id(e.target.value)\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={onSubmit} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Fragment>\n  )\n}\n\nCreateCompany.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(CreateCompany)\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Home from './Home/home'\nimport Callback from '../../Callback'\nimport Account from './Account/Account'\nimport CreateCompany from './Company/createCompany'\n\nexport const ContentContainer = () => (\n  <Switch>\n    <Route exact={true} path={`${process.env.PUBLIC_URL}/`} component={Home} />\n    <Route path={`${process.env.PUBLIC_URL}/overview`} component={Home} />\n    <Route path={`${process.env.PUBLIC_URL}/callback`} component={Callback} />\n    <Route path={`${process.env.PUBLIC_URL}/accounts`} component={Account} />\n    <Route path={`${process.env.PUBLIC_URL}/addcompany`} component={CreateCompany} />\n  </Switch>\n)\n","import React, { Fragment } from 'react'\nimport Header from '../MainContainer/HeaderContainer/Header'\nimport { ContentContainer } from './ContentContainer/ContentContainer'\n\nexport const MainContainer = () => (\n  <Fragment>\n    <Header />\n    <ContentContainer />\n  </Fragment>\n)\n","import { WebSocketLink } from \"apollo-link-ws\";\nimport { getMainDefinition } from \"apollo-utilities\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { split } from \"apollo-link\";\nimport { ApolloClient } from \"apollo-boost\";\nimport { SubscriptionClient } from \"subscriptions-transport-ws\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport ws from \"ws\";\n\nconst http = new HttpLink({\n  uri: \"https://cfo-foeroyar.herokuapp.com/v1alpha1/graphql\",\n  headers: {\n    \"x-hasura-admin-secret\": process.env.REACT_APP_X_HASURA_ADMIN_KEY,\n    \"x-hasura-role\": process.env.REACT_APP_X_HASURA_ROLE,\n    \"x-hasura-user-id\": localStorage.getItem(\"sub\")\n  },\n  fetch\n});\nconst wsForNode = typeof window === \"undefined\" ? ws : null;\nconst wsClient = new SubscriptionClient(\n  \"wss://cfo-foeroyar.herokuapp.com/v1alpha1/graphql\",\n  {\n    reconnect: true,\n\n    connectionParams: () => ({\n      headers: {\n        \"x-hasura-admin-secret\": process.env.REACT_APP_X_HASURA_ADMIN_KEY,\n        \"x-hasura-role\": process.env.REACT_APP_X_HASURA_ROLE,\n        \"x-hasura-user-id\": localStorage.getItem(\"sub\")\n      }\n    }),\n    wsForNode\n  }\n);\n\nconst websocket = new WebSocketLink(wsClient);\n\nconst link = new split(\n  ({ query }) => {\n    const { kind, operation } = getMainDefinition(query);\n\n    return kind === \"OperationDefinition\" && operation === \"subscription\";\n  },\n  websocket,\n  http\n);\n\nexport const client = new ApolloClient({ link, cache: new InMemoryCache() });\n","import React, { useContext, Fragment, useEffect } from 'react'\nimport Auth from './Auth/Auth'\nimport './App.css'\nimport { MainContainer } from './MainContainer/MainContainer'\nimport { ApolloProvider, useQuery } from 'react-apollo-hooks'\nimport { client } from '../src/utils/apollo'\nimport Context from '../src/Context/Context'\nimport { GET_USER } from '../src/utils/query'\n\nconst StoreUser = () => {\n  const { data } = useQuery(GET_USER, {\n    variables: {\n      token: localStorage.getItem('sub'),\n    },\n  })\n\n  // eslint-disable-next-line\n  const [state, dispatch] = useContext(Context)\n\n  useEffect(() => {\n    dispatch({\n      type: 'load_user',\n      user: data.User,\n    })\n  })\n  return null\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.auth = new Auth()\n  }\n\n  handleAuth = () => {\n    if (this.auth.isAuthenticated() === false) {\n      this.auth.login()\n    } else {\n      console.log('try again')\n    }\n  }\n\n  handleLogout = () => {\n    this.auth.logout()\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <ApolloProvider client={client}>\n          <StoreUser />\n          <MainContainer />\n        </ApolloProvider>\n      </Fragment>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useReducer } from 'react'\nimport PropTypes from 'prop-types'\nimport Context from './Context'\nimport createReducer from './createReducer'\n\nconst ContextStore = props => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  return (\n    <Context.Provider value={[state, dispatch]}>\n      {props.children}\n    </Context.Provider>\n  )\n}\n\nContextStore.propTypes = {\n  children: PropTypes.any,\n}\n\nconst initialState = {\n  currentIndex: 0,\n  locals: 'fo',\n  companies: null,\n  company: null,\n  user: null,\n}\n\nconst reducer = createReducer(initialState, {\n  reset: () => initialState,\n\n  change_company: (state, action) => ({\n    ...state,\n    companies: action.companies,\n  }),\n  set_company: (state, action) => ({\n    ...state,\n    company: state.companies[action.index],\n  }),\n  set_locals: (state, action) => ({\n    ...state,\n    locals: action.locals,\n  }),\n  load_user: (state, action) => ({\n    ...state,\n    user: action.user ? action.user[0] : null,\n  }),\n})\n\nexport default ContextStore\n","export default (initialState, handlers) => {\n    return function reducer(state = initialState, action) {\n      if (handlers.hasOwnProperty(action.type)) {\n        return handlers[action.type](state, action)\n      } else {\n        return state\n      }\n    }\n  }","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport ContextStore from './Context/ContextStore'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <ContextStore>\n    <BrowserRouter basename={'/cfo'}>\n      <App />\n    </BrowserRouter>\n  </ContextStore>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}