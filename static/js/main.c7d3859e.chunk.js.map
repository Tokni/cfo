{"version":3,"sources":["Auth/Auth.js","utils/language.js","Context/Context.js","MainContainer/Drawers/Drawer.js","MainContainer/HeaderContainer/Header.js","utils/query.js","MainContainer/ContentContainer/Home/home.js","Callback.js","MainContainer/ContentContainer/SnackBar/SnackBarContent.js","MainContainer/ContentContainer/SnackBar/SnackBar.js","MainContainer/ContentContainer/Account/getAccounts.js","MainContainer/ContentContainer/Account/createAccounts.js","MainContainer/ContentContainer/Account/Account.js","MainContainer/ContentContainer/Company/createCompany.js","MainContainer/ContentContainer/ContentContainer.js","MainContainer/MainContainer.js","utils/apollo.js","App.js","serviceWorker.js","Context/ContextStore.js","Context/createReducer.js","index.js"],"names":["Auth","auth","Auth0","WebAuth","domain","process","clientID","audience","concat","redirectUri","responseType","scope","login","_this","authorize","handleAuthentication","isAuthenticated","localStorage","getItem","logout","removeItem","checkSession","setSession","authResult","setItem","accessToken","idTokenPayload","sub","idToken","parseHash","err","error","console","log","Language","en","overview","invoice","bills","transactions","customers","products","accounts","sales","addcompany","cancel","add","fo","de","createContext","withStyles","list","width","fullList","props","_useContext","useContext","Context","state","Object","slicedToArray","_useState","useState","_useState2","left","setLeft","toggleDrawer","side","open","handleOnClick","classes","sideList","react_default","a","createElement","className","List_default","map","text","index","react_router_dom","key","to","split","join","toLowerCase","ListItem_default","button","onClick","ListItemIcon_default","Dashboard_default","Mail_default","ListItemText_default","primary","locals","Divider_default","Drawer_default","onClose","tabIndex","role","onKeyDown","root","flexGrow","grow","menuButton","marginLeft","marginRight","drawer","setDrawer","AppBar_default","position","Toolbar_default","IconButton_default","color","aria-label","Menu_default","Drawers_Drawer","Typography_default","variant","Button_default","GET_COMPANY","gql","_templateObject","GET_SUBSCRIP_ACCOUNTS","_templateObject2","_templateObject3","_templateObject4","GET_USER","_templateObject5","CREATE_COMPANY","_templateObject6","CREATE_ACCOUNT","_templateObject7","_templateObject8","Home","data","useQuery","suspend","_useContext2","dispatch","handleChooseCompany","id","type","react","companies","Company","Grid_default","container","spacing","xs","style","padding","justify","Paper_default","height","overflowX","index_es","gutterBottom","Table_default","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","item","bind","component","mother_id","user_id","name","Callback","React","Component","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","theme","backgroundColor","green","palette","dark","amber","icon","fontSize","iconVariant","opacity","unit","message","display","alignItems","other","objectWithoutProperties","Icon","SnackbarContent_default","assign","classNames","aria-describedby","action","close","Close_default","MySnackbarContentWrapper","SnackBarContent","margin","setOpen","handleClose","event","reason","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","Accounts","_useSubscription","useSubscription","variables","company_id","company","loading","SnackBar","Account","balance","debit","fab","extendedIcon","_useState3","_useState4","setName","_useState5","_useState6","setDebit","_useState7","_useState8","setBalance","createAccountMutation","useMutation","_useState9","_useState10","msg","setMsg","_useState11","_useState12","msgSuccess","setMsgSuccess","Fab_default","Add_default","Dialog_default","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","TextField_default","autoFocus","label","fullWidth","onChange","e","target","value","select","DialogActions_default","preventDefault","setTimeout","createAccounts","getAccounts","setMother_id","createCompanyMutation","user","ContentContainer","react_router","path","CreateCompany","MainContainer","HeaderContainer_Header","ContentContainer_ContentContainer","http","HttpLink","uri","headers","x-hasura-admin-secret","x-hasura-role","x-hasura-user-id","fetch","wsForNode","window","ws","wsClient","SubscriptionClient","reconnect","connectionParams","websocket","WebSocketLink","link","_ref","query","_getMainDefinition","getMainDefinition","kind","operation","client","ApolloClient","cache","InMemoryCache","StoreUser","token","useEffect","User","App","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleAuth","handleLogout","ApolloContext","App_StoreUser","MainContainer_MainContainer","Boolean","location","hostname","match","initialState","currentIndex","reducer","handlers","arguments","length","undefined","hasOwnProperty","createReducer","reset","change_company","objectSpread","set_company","set_locals","load_user","ContextStore","_useReducer","useReducer","_useReducer2","Provider","children","ReactDOM","render","Context_ContextStore","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c7d3859e.chunk.js","sourcesContent":["import Auth0 from 'auth0-js'\r\n\r\nclass Auth {\r\n  auth = new Auth0.WebAuth({\r\n    domain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    clientID: process.env.REACT_APP_AUTH_CLIENT_ID,\r\n    audience: `https://${process.env.REACT_APP_AUTH_DOMAIN}/userinfo`,\r\n    redirectUri: process.env.REACT_APP_REDIRECT_URI,\r\n    responseType: 'token id_token',\r\n    scope: 'openid',\r\n  })\r\n\r\n  login = () => {\r\n    this.auth.authorize()\r\n    this.handleAuthentication()\r\n  }\r\n\r\n  isAuthenticated = () => {\r\n    return localStorage.getItem('idToken') ? true : false\r\n  }\r\n\r\n  logout = () => {\r\n    localStorage.removeItem('accessToken')\r\n    localStorage.removeItem('idToken')\r\n    localStorage.removeItem('sub')\r\n    this.auth.logout()\r\n  }\r\n\r\n  checkSession = () => {\r\n    this.auth.checkSession({}, this.setSession)\r\n  }\r\n\r\n  setSession = authResult => {\r\n    localStorage.setItem('accessToken', authResult.accessToken)\r\n    localStorage.setItem('sub', authResult.idTokenPayload.sub)\r\n    localStorage.setItem('idToken', authResult.idToken)\r\n  }\r\n\r\n  handleAuthentication = () => {\r\n    this.auth.parseHash((err, authResult) => {\r\n      if (err) {\r\n        if (err.error === 'login_required') {\r\n          this.login()\r\n        }\r\n        console.log(err)\r\n      }\r\n      if (authResult && authResult.idToken && authResult.accessToken) {\r\n        this.setSession(authResult)\r\n      }\r\n    })\r\n  }\r\n}\r\nexport default Auth\r\n","const Language = {\r\n  en: {\r\n    overview: 'Overview',\r\n    invoice: 'Invoice',\r\n    bills: 'Bills',\r\n    transactions: 'Transactions',\r\n    customers: 'Customers',\r\n    products: 'Products',\r\n    accounts: 'Accounts',\r\n    sales: 'Sales',\r\n    login: 'Login',\r\n    logout: 'Logout',\r\n    addcompany: 'Add Company',\r\n    cancel: 'Cancel',\r\n    add: 'Add',\r\n  },\r\n  fo: {\r\n    overview: 'Yvirlit',\r\n    invoice: 'Faktura',\r\n    bills: 'Rokningar',\r\n    transactions: 'Flytingar',\r\n    customers: 'Kundar',\r\n    products: 'Vørur',\r\n    accounts: 'Kontur',\r\n    sales: 'Sølur',\r\n    login: 'Rita inn',\r\n    logout: 'Rita út',\r\n    addcompany: 'Stovna fyritøku',\r\n    cancel: 'Strika',\r\n    add: 'Legg afturat',\r\n  },\r\n  de: {\r\n    overview: 'Übersicht',\r\n    invoice: 'Rechnung',\r\n    bills: 'Rechnungen',\r\n    transactions: 'Transaktionen',\r\n    customers: 'Kunden',\r\n    products: 'Produkte',\r\n    accounts: 'Konten',\r\n    sales: 'Verkauf',\r\n    login: 'Anmeldung',\r\n    logout: 'Ausloggen',\r\n    addcompany: 'Firma Hinzufügen',\r\n    cancel: 'Stornieren',\r\n    add: 'Hinzufügen',\r\n  },\r\n}\r\n\r\nexport default Language\r\n","import { createContext } from 'react'\r\nexport default createContext()","import React, { useContext, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport List from '@material-ui/core/List'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport MailIcon from '@material-ui/icons/Mail'\r\nimport Dashboard from '@material-ui/icons/Dashboard'\r\nimport Language from '../../utils/language'\r\nimport { Link } from 'react-router-dom'\r\nimport Context from '../../Context/Context'\r\n\r\nconst styles = {\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n}\r\n\r\nconst SideDrawer = props => {\r\n  const [state] = useContext(Context)\r\n  const [left, setLeft] = useState(true)\r\n\r\n  const toggleDrawer = (side, open) => () => {\r\n    setLeft(open)\r\n  }\r\n\r\n  const handleOnClick = () => {\r\n    // this.forceUpdate()\r\n  }\r\n\r\n  const { classes } = props\r\n\r\n  const sideList = (\r\n    <div className={classes.list}>\r\n      {/* <Router> */}\r\n      <List>\r\n        {[\r\n          Language['en'].overview,\r\n          Language['en'].invoice,\r\n          Language['en'].bills,\r\n          Language['en'].transactions,\r\n          Language['en'].accounts,\r\n          Language['en'].addcompany,\r\n        ].map((text, index) => (\r\n          <Link\r\n            key={index}\r\n            to={`/${text\r\n              .split(' ')\r\n              .join('')\r\n              .toLowerCase()}`}\r\n          >\r\n            <ListItem button key={index} onClick={handleOnClick}>\r\n              <ListItemIcon>\r\n                {index % 2 === 0 ? <Dashboard /> : <MailIcon />}\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                primary={\r\n                  Language[state.locals][\r\n                    text\r\n                      .toLowerCase()\r\n                      .split(' ')\r\n                      .join('')\r\n                  ]\r\n                }\r\n              />\r\n            </ListItem>\r\n          </Link>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <Drawer open={left} onClose={toggleDrawer('left', false)}>\r\n        <div\r\n          tabIndex={0}\r\n          role=\"button\"\r\n          onClick={toggleDrawer('left', false)}\r\n          onKeyDown={toggleDrawer('left', false)}\r\n        >\r\n          {sideList}\r\n        </div>\r\n      </Drawer>\r\n    </div>\r\n  )\r\n}\r\n\r\nSideDrawer.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(SideDrawer)\r\n","import React, { useState, useContext } from 'react'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport Auth from '../../Auth/Auth'\r\nimport PropTypes from 'prop-types'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Drawer from '../Drawers/Drawer'\r\nimport Language from '../../utils/language'\r\nimport Context from '../../Context/Context'\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n}\r\n\r\nconst Header = props => {\r\n  const auth = new Auth()\r\n  const [drawer, setDrawer] = useState(false)\r\n  const [state] = useContext(Context)\r\n  const handleAuth = () => {\r\n    if (auth.isAuthenticated() === false) {\r\n      auth.login()\r\n    } else {\r\n      console.log('try again')\r\n    }\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    auth.logout()\r\n  }\r\n\r\n  const handleDrawer = () => {\r\n    setDrawer(!drawer)\r\n  }\r\n\r\n  const { classes } = props\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"Menu\"\r\n            onClick={handleDrawer}\r\n          >\r\n            <MenuIcon />\r\n            {drawer ? <Drawer /> : ''}\r\n          </IconButton>\r\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n            CFO\r\n          </Typography>\r\n          {localStorage.getItem('sub') ? (\r\n            <Button onClick={handleLogout} color=\"inherit\">\r\n              {Language[state.locals].logout}\r\n            </Button>\r\n          ) : (\r\n            <Button onClick={handleAuth} color=\"inherit\">\r\n              {Language[state.locals].login}\r\n            </Button>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(Header)\r\n","import gql from 'graphql-tag'\r\nconst GET_COMPANY = gql`\r\n  query getCompanies {\r\n    Company {\r\n      id\r\n      mother_id\r\n      name\r\n      user_id\r\n    }\r\n  }\r\n`\r\n\r\nconst GET_SUBSCRIP_COMPANY = gql`\r\n  subscription {\r\n    Company {\r\n      user_id\r\n      name\r\n    }\r\n  }\r\n`\r\n\r\nconst GET_ACCOUNTS = gql`\r\n  {\r\n    Company {\r\n      user_id\r\n      name\r\n    }\r\n  }\r\n`\r\n\r\nconst GET_SUBSCRIP_ACCOUNTS = gql`\r\n  subscription($company_id: uuid!) {\r\n    Account(where: { company_id: { _eq: $company_id } }) {\r\n      id\r\n      name\r\n      debit\r\n      balance\r\n      company_id\r\n      Company {\r\n        user_id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst GET_USER = gql`\r\n  query($token: String!) {\r\n    User(where: { token: { _like: $token } }) {\r\n      first_name\r\n      last_name\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst CREATE_COMPANY = gql`\r\n  mutation createCompany($name: String!, $mother_id: uuid, $user_id: uuid!) {\r\n    insert_Company(\r\n      objects: { name: $name, mother_id: $mother_id, user_id: $user_id }\r\n    ) {\r\n      affected_rows\r\n    }\r\n  }\r\n`\r\n\r\nconst CREATE_ACCOUNT = gql`\r\n  mutation createAccount(\r\n    $name: String!\r\n    $balance: numeric!\r\n    $debit: Boolean!\r\n    $company_id: uuid!\r\n  ) {\r\n    insert_Account(\r\n      objects: {\r\n        name: $name\r\n        balance: $balance\r\n        debit: $debit\r\n        company_id: $company_id\r\n      }\r\n    ) {\r\n      affected_rows\r\n    }\r\n  }\r\n`\r\nconst GET_DAY_BOOK = gql`\r\n  {\r\n    day_book {\r\n      account_id\r\n      name\r\n      balance\r\n    }\r\n  }\r\n`\r\n\r\nexport {\r\n  GET_COMPANY,\r\n  GET_DAY_BOOK,\r\n  GET_SUBSCRIP_COMPANY,\r\n  GET_ACCOUNTS,\r\n  GET_SUBSCRIP_ACCOUNTS,\r\n  CREATE_ACCOUNT,\r\n  CREATE_COMPANY,\r\n  GET_USER,\r\n}\r\n","import React, { useContext, Fragment } from 'react'\r\nimport Context from '../../../Context/Context'\r\nimport { useQuery } from 'react-apollo-hooks'\r\nimport { GET_COMPANY } from '../../../utils/query'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { Typography } from '@material-ui/core'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nconst Home = () => {\r\n  const { data } = useQuery(GET_COMPANY, {\r\n    suspend: false,\r\n  })\r\n\r\n  const [state, dispatch] = useContext(Context)\r\n\r\n  const companiesLoader = () => {\r\n    dispatch({\r\n      type: 'change_company',\r\n      companies: data.Company,\r\n    })\r\n  }\r\n\r\n  const companyHandler = () => {\r\n    dispatch({\r\n      type: 'set_company',\r\n      index: 0,\r\n    })\r\n  }\r\n\r\n  const handleChooseCompany = id => {\r\n    console.log('id is : ', id)\r\n    dispatch({\r\n      type: 'set_company',\r\n      index: id,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <button onClick={companiesLoader}>load companies</button>\r\n      <button onClick={companyHandler}>get company</button>\r\n      <button\r\n        onClick={() => {\r\n          dispatch({ type: 'set_locals', locals: 'en' })\r\n        }}\r\n      >\r\n        EN\r\n      </button>\r\n      <button\r\n        onClick={() => {\r\n          dispatch({ type: 'set_locals', locals: 'fo' })\r\n        }}\r\n      >\r\n        FO\r\n      </button>\r\n      <button\r\n        onClick={() => {\r\n          dispatch({ type: 'set_locals', locals: 'de' })\r\n        }}\r\n      >\r\n        DE\r\n      </button>\r\n      <Grid container spacing={12}>\r\n        <Grid xs={4} style={{ color: '#001011', padding: 20 }}>\r\n          <Grid justify=\"center\">\r\n            <Paper style={{ padding: 8, height: 400, overflowX: 'auto' }}>\r\n              <Typography gutterBottom variant=\"title\">\r\n                Standard license\r\n              </Typography>\r\n              <Typography gutterBottom variant=\"body\">\r\n                Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                industry. Lorem Ipsum has been the industry's standard dummy\r\n                text ever since the 1500s, when an unknown printer took a galley\r\n                of type and scrambled it to make a type specimen book. It has\r\n                survived not only five centuries, but also the leap into\r\n                electronic typesetting, remaining essentially unchanged. It was\r\n                popularised in the 1960s with the release of Letraset sheets\r\n                containing Lorem Ipsum passages, and more recently with desktop\r\n                publishing software like Aldus PageMaker including versions of\r\n                Lorem Ipsum.\r\n              </Typography>\r\n              <Typography gutterBottom variant=\"title\">\r\n                Why do we use it?\r\n              </Typography>\r\n              <Typography variant=\"body\">\r\n                It is a long established fact that a reader will be distracted\r\n                by the readable content of a page when looking at its layout.\r\n                The point of using Lorem Ipsum is that it has a more-or-less\r\n                normal distribution of letters, as opposed to using 'Content\r\n                here, content here', making it look like readable English. Many\r\n                desktop publishing packages and web page editors now use Lorem\r\n                Ipsum as their default model text, and a search for 'lorem\r\n                ipsum' will uncover many web sites still in their infancy.\r\n                Various versions have evolved over the years, sometimes by\r\n                accident, sometimes on purpose (injected humour and the like).\r\n              </Typography>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid xs={8} style={{ padding: 20 }}>\r\n          <Grid justify=\"center\">\r\n            <Paper style={{ padding: 10 }}>\r\n              <Typography variant=\"subtitle1\">\r\n                Trýst á eina fyritøku fyri at velja hana.\r\n              </Typography>\r\n            </Paper>\r\n          </Grid>\r\n          <Paper>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Id</TableCell>\r\n                  <TableCell align=\"right\">Mother Id</TableCell>\r\n                  <TableCell align=\"right\">User Id</TableCell>\r\n                  <TableCell align=\"right\">Name</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {state.companies\r\n                  ? state.companies.map((item, index) => {\r\n                      return (\r\n                        <TableRow\r\n                          key={index}\r\n                          onClick={handleChooseCompany.bind(this, index)}\r\n                        >\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {item.id}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">{item.mother_id}</TableCell>\r\n                          <TableCell align=\"right\">{item.user_id}</TableCell>\r\n                          <TableCell align=\"right\">{item.name}</TableCell>\r\n                        </TableRow>\r\n                      )\r\n                    })\r\n                  : console.log('error')}\r\n              </TableBody>\r\n            </Table>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from \"react\";\r\n\r\nclass Callback extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Hello from callback</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Callback;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\r\nimport ErrorIcon from '@material-ui/icons/Error'\r\nimport InfoIcon from '@material-ui/icons/Info'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport green from '@material-ui/core/colors/green'\r\nimport amber from '@material-ui/core/colors/amber'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent'\r\nimport WarningIcon from '@material-ui/icons/Warning'\r\nimport { withStyles } from '@material-ui/core/styles'\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n}\r\n\r\nconst styles1 = theme => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n})\r\n\r\nfunction SnackBarContent(props) {\r\n  const { classes, className, message, onClose, variant, ...other } = props\r\n  const Icon = variantIcon[variant]\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={classNames(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"Close\"\r\n          color=\"inherit\"\r\n          className={classes.close}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  )\r\n}\r\n\r\nSnackBarContent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  message: PropTypes.node,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n}\r\n\r\nexport default withStyles(styles1)(SnackBarContent)\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport green from '@material-ui/core/colors/green'\r\nimport amber from '@material-ui/core/colors/amber'\r\n\r\nimport SnackBarContent from './SnackBarContent'\r\n\r\nconst styles1 = theme => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n})\r\n\r\nconst styles2 = theme => ({\r\n  margin: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n})\r\n\r\nconst MySnackbarContentWrapper = withStyles(styles1)(SnackBarContent)\r\n\r\nconst CustomizedSnackbars = props => {\r\n  const [open, setOpen] = useState(true)\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return\r\n    }\r\n\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n      >\r\n        <MySnackbarContentWrapper\r\n          onClose={handleClose}\r\n          variant={props.state}\r\n          message={props.message}\r\n        />\r\n      </Snackbar>\r\n    </div>\r\n  )\r\n}\r\n\r\nCustomizedSnackbars.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles2)(CustomizedSnackbars)\r\n","import { useSubscription } from 'react-apollo-hooks'\r\nimport { GET_SUBSCRIP_ACCOUNTS } from '../../../utils/query'\r\nimport React, { useContext } from 'react'\r\n\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Context from '../../../Context/Context'\r\n\r\nimport SnackBar from '../SnackBar/SnackBar'\r\n\r\nconst Accounts = () => {\r\n  const [state] = useContext(Context)\r\n  const { data, error, loading } = useSubscription(GET_SUBSCRIP_ACCOUNTS, {\r\n    suspend: false,\r\n    variables: {\r\n      company_id: state.company ? state.company.id : null,\r\n    },\r\n  })\r\n\r\n  if (loading) {\r\n    console.log('Loading accounts...')\r\n    return (\r\n      <tr>\r\n        <td>-</td>\r\n      </tr>\r\n    )\r\n  }\r\n  if (error) {\r\n    return <SnackBar message={'Error loading accounts'} state={'error'} />\r\n  }\r\n  return (\r\n    <Paper>\r\n      {state.company === null ? (\r\n        <SnackBar message={'Load companies first'} state={'warning'} />\r\n      ) : null}\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Id</TableCell>\r\n            <TableCell align=\"right\">Name</TableCell>\r\n            <TableCell align=\"right\">Balance</TableCell>\r\n            <TableCell align=\"right\">Debit / Credit</TableCell>\r\n            <TableCell align=\"right\">Company name</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.Account.map((item, index) => {\r\n            return (\r\n              <TableRow key={index}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {item.id}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{item.name}</TableCell>\r\n                <TableCell align=\"right\">{item.balance}</TableCell>\r\n                <TableCell align=\"right\">\r\n                  {item.debit ? 'debit' : 'credit'}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{item.Company.name}</TableCell>\r\n              </TableRow>\r\n            )\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default Accounts\r\n","import React, { Fragment, useState, useContext } from 'react'\r\nimport Fab from '@material-ui/core/Fab'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport PropTypes from 'prop-types'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport { CREATE_ACCOUNT } from '../../../utils/query'\r\nimport { useMutation } from 'react-apollo-hooks'\r\nimport Context from '../../../Context/Context'\r\nimport Language from '../../../utils/language'\r\nimport SnackBar from '../SnackBar/SnackBar'\r\nimport { setTimeout } from 'timers'\r\n\r\nconst styles = theme => ({\r\n  fab: {\r\n    margin: theme.spacing.unit,\r\n    flexGrow: 1,\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n})\r\n\r\nconst CreateAccount = props => {\r\n  const [open, setOpen] = useState(false)\r\n  const [name, setName] = useState('')\r\n  const [debit, setDebit] = useState(true)\r\n  const [balance, setBalance] = useState(0)\r\n  const { classes } = props\r\n  const createAccountMutation = useMutation(CREATE_ACCOUNT)\r\n  const [state] = useContext(Context)\r\n  const [msg, setMsg] = useState(false)\r\n  const [msgSuccess, setMsgSuccess] = useState(true)\r\n\r\n  const handleClose = () => {\r\n    setName(null)\r\n    setBalance(0)\r\n    setDebit(true)\r\n    if (state.company !== null) {\r\n      setOpen(!open)\r\n    }\r\n    setMsg(false)\r\n  }\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault()\r\n    if (name !== null) {\r\n      createAccountMutation({\r\n        variables: {\r\n          name,\r\n          balance,\r\n          debit,\r\n          company_id: state.company.id,\r\n        },\r\n      })\r\n      setTimeout(() => {\r\n        setMsgSuccess(true)\r\n        setMsg(true)\r\n      }, 1000)\r\n    } else {\r\n      setTimeout(() => {\r\n        setMsgSuccess(false)\r\n        setMsg(true)\r\n      }, 1000)\r\n    }\r\n    handleClose()\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Fab\r\n        onClick={handleClose}\r\n        color=\"primary\"\r\n        aria-label=\"Add\"\r\n        className={classes.fab}\r\n      >\r\n        <AddIcon />\r\n      </Fab>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Add Account</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Fill this form to add an account\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Account name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            onChange={e => {\r\n              setName(e.target.value)\r\n            }}\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"balance\"\r\n            label=\"Balance\"\r\n            value={balance}\r\n            type=\"number\"\r\n            fullWidth\r\n            onChange={e => {\r\n              setBalance(e.target.value)\r\n            }}\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            select\r\n            margin=\"dense\"\r\n            id=\"debit\"\r\n            label=\"Debit / Credit\"\r\n            fullWidth\r\n            value={debit}\r\n            onChange={e => {\r\n              setDebit(e.target.value)\r\n            }}\r\n          >\r\n            <option key={1} value={true}>\r\n              Debit\r\n            </option>\r\n            <option key={2} value={false}>\r\n              Credit\r\n            </option>\r\n          </TextField>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            {Language[state.locals].cancel}\r\n          </Button>\r\n          <Button onClick={onSubmit} color=\"primary\">\r\n            {Language[state.locals].add}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {msg === true ? (\r\n        msg === true && msgSuccess === true ? (\r\n          <SnackBar message={'Account added successfully'} state={'success'} />\r\n        ) : (\r\n          <SnackBar message={'Name is required'} state={'error'} />\r\n        )\r\n      ) : null}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nCreateAccount.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(CreateAccount)\r\n","import React, { Fragment } from 'react'\r\n\r\nimport GetAccount from './getAccounts'\r\nimport CreateAccount from './createAccounts'\r\nconst Account = () => (\r\n  <Fragment>\r\n    <CreateAccount />\r\n    <GetAccount />\r\n  </Fragment>\r\n)\r\n\r\nexport default Account\r\n","import React, { Fragment, useState, useContext } from 'react'\r\nimport { CREATE_COMPANY } from '../../../utils/query'\r\nimport { useMutation } from 'react-apollo-hooks'\r\nimport Context from '../../../Context/Context'\r\nimport Fab from '@material-ui/core/Fab'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport PropTypes from 'prop-types'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst styles = theme => ({\r\n  fab: {\r\n    margin: theme.spacing.unit,\r\n    flexGrow: 1,\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n})\r\n\r\nconst CreateCompany = props => {\r\n  let [name, setName] = useState('')\r\n  let [mother_id, setMother_id] = useState(null)\r\n  const { classes } = props\r\n  const createCompanyMutation = useMutation(CREATE_COMPANY)\r\n  const [state] = useContext(Context)\r\n  const [open, setOpen] = useState(false)\r\n\r\n  const handleClose = () => {\r\n    setName('')\r\n    setMother_id(null)\r\n    if (state.user !== null) {\r\n      setOpen(!open)\r\n    }\r\n  }\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault()\r\n    if (name !== '') {\r\n      createCompanyMutation({\r\n        variables: {\r\n          name,\r\n          mother_id,\r\n          user_id: state.user.id,\r\n        },\r\n      })\r\n    }\r\n    handleClose()\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Fab\r\n        onClick={handleClose}\r\n        color=\"primary\"\r\n        aria-label=\"Add\"\r\n        className={classes.fab}\r\n      >\r\n        <AddIcon />\r\n      </Fab>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Add Company</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>Fill this form to add a company</DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Company name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            onChange={e => {\r\n              setName(e.target.value)\r\n            }}\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"mother_id\"\r\n            label=\"Mother ID\"\r\n            type=\"text\"\r\n            fullWidth\r\n            onChange={e => {\r\n              setMother_id(e.target.value)\r\n            }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={onSubmit} color=\"primary\">\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nCreateCompany.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(CreateCompany)\r\n","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport Home from './Home/home'\r\nimport Callback from '../../Callback'\r\nimport Account from './Account/Account'\r\nimport CreateCompany from './Company/createCompany'\r\n\r\nexport const ContentContainer = () => (\r\n  <Switch>\r\n    <Route path={`${process.env.PUBLIC_URL}/overview`} component={Home} />\r\n    <Route path={`${process.env.PUBLIC_URL}/callback`} component={Callback} />\r\n    <Route path={`${process.env.PUBLIC_URL}/accounts`} component={Account} />\r\n    <Route path={`${process.env.PUBLIC_URL}/addcompany`} component={CreateCompany} />\r\n  </Switch>\r\n)\r\n","import React, { Fragment } from 'react'\r\nimport Header from '../MainContainer/HeaderContainer/Header'\r\nimport { ContentContainer } from './ContentContainer/ContentContainer'\r\n\r\nexport const MainContainer = () => (\r\n  <Fragment>\r\n    <Header />\r\n    <ContentContainer />\r\n  </Fragment>\r\n)\r\n","import { WebSocketLink } from \"apollo-link-ws\";\r\nimport { getMainDefinition } from \"apollo-utilities\";\r\nimport { HttpLink } from \"apollo-link-http\";\r\nimport { split } from \"apollo-link\";\r\nimport { ApolloClient } from \"apollo-boost\";\r\nimport { SubscriptionClient } from \"subscriptions-transport-ws\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\nimport ws from \"ws\";\r\n\r\nconst http = new HttpLink({\r\n  uri: \"https://cfo-foeroyar.herokuapp.com/v1alpha1/graphql\",\r\n  headers: {\r\n    \"x-hasura-admin-secret\": process.env.REACT_APP_X_HASURA_ADMIN_KEY,\r\n    \"x-hasura-role\": process.env.REACT_APP_X_HASURA_ROLE,\r\n    \"x-hasura-user-id\": localStorage.getItem(\"sub\")\r\n  },\r\n  fetch\r\n});\r\nconst wsForNode = typeof window === \"undefined\" ? ws : null;\r\nconst wsClient = new SubscriptionClient(\r\n  \"wss://cfo-foeroyar.herokuapp.com/v1alpha1/graphql\",\r\n  {\r\n    reconnect: true,\r\n\r\n    connectionParams: () => ({\r\n      headers: {\r\n        \"x-hasura-admin-secret\": process.env.REACT_APP_X_HASURA_ADMIN_KEY,\r\n        \"x-hasura-role\": process.env.REACT_APP_X_HASURA_ROLE,\r\n        \"x-hasura-user-id\": localStorage.getItem(\"sub\")\r\n      }\r\n    }),\r\n    wsForNode\r\n  }\r\n);\r\n\r\nconst websocket = new WebSocketLink(wsClient);\r\n\r\nconst link = new split(\r\n  ({ query }) => {\r\n    const { kind, operation } = getMainDefinition(query);\r\n\r\n    return kind === \"OperationDefinition\" && operation === \"subscription\";\r\n  },\r\n  websocket,\r\n  http\r\n);\r\n\r\nexport const client = new ApolloClient({ link, cache: new InMemoryCache() });\r\n","import React, { useContext, Fragment, useEffect } from 'react'\r\nimport Auth from './Auth/Auth'\r\nimport './App.css'\r\nimport { MainContainer } from './MainContainer/MainContainer'\r\nimport { ApolloProvider, useQuery } from 'react-apollo-hooks'\r\nimport { client } from '../src/utils/apollo'\r\nimport Context from '../src/Context/Context'\r\nimport { GET_USER } from '../src/utils/query'\r\n\r\nconst StoreUser = () => {\r\n  const { data } = useQuery(GET_USER, {\r\n    variables: {\r\n      token: localStorage.getItem('sub'),\r\n    },\r\n  })\r\n\r\n  // eslint-disable-next-line\r\n  const [state, dispatch] = useContext(Context)\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: 'load_user',\r\n      user: data.User,\r\n    })\r\n  })\r\n  return null\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.auth = new Auth()\r\n  }\r\n\r\n  handleAuth = () => {\r\n    if (this.auth.isAuthenticated() === false) {\r\n      this.auth.login()\r\n    } else {\r\n      console.log('try again')\r\n    }\r\n  }\r\n\r\n  handleLogout = () => {\r\n    this.auth.logout()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <ApolloProvider client={client}>\r\n          <StoreUser />\r\n          <MainContainer />\r\n        </ApolloProvider>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { useReducer } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Context from './Context'\r\nimport createReducer from './createReducer'\r\n\r\nconst ContextStore = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  return (\r\n    <Context.Provider value={[state, dispatch]}>\r\n      {props.children}\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nContextStore.propTypes = {\r\n  children: PropTypes.any,\r\n}\r\n\r\nconst initialState = {\r\n  currentIndex: 0,\r\n  locals: 'fo',\r\n  companies: null,\r\n  company: null,\r\n  user: null,\r\n}\r\n\r\nconst reducer = createReducer(initialState, {\r\n  reset: () => initialState,\r\n\r\n  change_company: (state, action) => ({\r\n    ...state,\r\n    companies: action.companies,\r\n  }),\r\n  set_company: (state, action) => ({\r\n    ...state,\r\n    company: state.companies[action.index],\r\n  }),\r\n  set_locals: (state, action) => ({\r\n    ...state,\r\n    locals: action.locals,\r\n  }),\r\n  load_user: (state, action) => ({\r\n    ...state,\r\n    user: action.user ? action.user[0] : null,\r\n  }),\r\n})\r\n\r\nexport default ContextStore\r\n","export default (initialState, handlers) => {\r\n    return function reducer(state = initialState, action) {\r\n      if (handlers.hasOwnProperty(action.type)) {\r\n        return handlers[action.type](state, action)\r\n      } else {\r\n        return state\r\n      }\r\n    }\r\n  }","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport ContextStore from './Context/ContextStore'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <ContextStore>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </ContextStore>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}